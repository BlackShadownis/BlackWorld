{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dylam\\\\Desktop\\\\django react\\\\anime_player\\\\anime-player-frontend\\\\src\\\\components\\\\SearchAnime.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SearchAnime = () => {\n  _s();\n  const [query, setQuery] = useState(''); // Para almacenar lo que escribe el usuario\n  const [animeList, setAnimeList] = useState([]); // Para almacenar los resultados\n  const [loading, setLoading] = useState(false); // Para manejar el estado de carga\n  const [error, setError] = useState(null); // Para manejar errores\n\n  // Función para hacer la búsqueda\n  const handleSearch = async () => {\n    if (!query) return; // Si no hay consulta, no hacer nada\n\n    setLoading(true); // Establecer el estado de carga a true\n    setError(null); // Resetear errores\n\n    try {\n      // Hacer la solicitud al backend de Django\n      const response = await fetch(`http://localhost:8000/search/?query=${query}`);\n      if (response.ok) {\n        const data = await response.json();\n        setAnimeList(data); // Establecer los datos en el estado\n      } else {\n        setError('Error fetching data'); // Si la respuesta no es exitosa\n      }\n    } catch (err) {\n      setError('Failed to fetch data'); // Si ocurre un error al hacer la solicitud\n    } finally {\n      setLoading(false); // Finaliza la carga\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"search-anime\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: query,\n      onChange: e => setQuery(e.target.value) // Actualizar el estado cuando el usuario escribe\n      ,\n      placeholder: \"Buscar anime...\",\n      className: \"search-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSearch,\n      className: \"search-button\",\n      children: \"Buscar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), loading && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Cargando...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 19\n    }, this), \"  \", error && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 17\n    }, this), \"  \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"anime-results\",\n      children: animeList.length > 0 ? animeList.map((anime, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"anime-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: anime.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: anime.link,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Ver Anime\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No se encontraron resultados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(SearchAnime, \"z+T+XxNjtsfrWPqE+SHchEzu8Xk=\");\n_c = SearchAnime;\nexport default SearchAnime;\nvar _c;\n$RefreshReg$(_c, \"SearchAnime\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","SearchAnime","_s","query","setQuery","animeList","setAnimeList","loading","setLoading","error","setError","handleSearch","response","fetch","ok","data","json","err","className","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","length","map","anime","index","title","href","link","rel","_c","$RefreshReg$"],"sources":["C:/Users/dylam/Desktop/django react/anime_player/anime-player-frontend/src/components/SearchAnime.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst SearchAnime = () => {\r\n  const [query, setQuery] = useState('');  // Para almacenar lo que escribe el usuario\r\n  const [animeList, setAnimeList] = useState([]);  // Para almacenar los resultados\r\n  const [loading, setLoading] = useState(false);  // Para manejar el estado de carga\r\n  const [error, setError] = useState(null);  // Para manejar errores\r\n\r\n  // Función para hacer la búsqueda\r\n  const handleSearch = async () => {\r\n    if (!query) return;  // Si no hay consulta, no hacer nada\r\n\r\n    setLoading(true);  // Establecer el estado de carga a true\r\n    setError(null);  // Resetear errores\r\n\r\n    try {\r\n      // Hacer la solicitud al backend de Django\r\n      const response = await fetch(`http://localhost:8000/search/?query=${query}`);\r\n      \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setAnimeList(data);  // Establecer los datos en el estado\r\n      } else {\r\n        setError('Error fetching data');  // Si la respuesta no es exitosa\r\n      }\r\n    } catch (err) {\r\n      setError('Failed to fetch data');  // Si ocurre un error al hacer la solicitud\r\n    } finally {\r\n      setLoading(false);  // Finaliza la carga\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"search-anime\">\r\n      <input\r\n        type=\"text\"\r\n        value={query}\r\n        onChange={(e) => setQuery(e.target.value)}  // Actualizar el estado cuando el usuario escribe\r\n        placeholder=\"Buscar anime...\"\r\n        className=\"search-input\"\r\n      />\r\n      <button onClick={handleSearch} className=\"search-button\">\r\n        Buscar\r\n      </button>\r\n\r\n      {loading && <p>Cargando...</p>}  {/* Mostrar un mensaje mientras se cargan los resultados */}\r\n      {error && <p>{error}</p>}  {/* Mostrar errores si ocurren */}\r\n\r\n      <div className=\"anime-results\">\r\n        {animeList.length > 0 ? (\r\n          animeList.map((anime, index) => (\r\n            <div key={index} className=\"anime-item\">\r\n              <h3>{anime.title}</h3>\r\n              <a href={anime.link} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                Ver Anime\r\n              </a>\r\n            </div>\r\n          ))\r\n        ) : (\r\n          <p>No se encontraron resultados</p>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchAnime;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}