{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\dylam\\\\Desktop\\\\django react\\\\anime_player\\\\anime-player-frontend\\\\src\\\\components\\\\SearchAnime.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimeList = () => {\n  _s();\n  const [animeData, setAnimeData] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8000/api/anime/\").then(response => response.json()).then(data => setAnimeData(data)).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Anime List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), animeData.length === 0 ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No anime data available\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: animeData.map((anime, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: anime.title\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n_s(AnimeList, \"Ow/WlxbM8ZnH9CMn3HGskyD6Nlk=\");\n_c = AnimeList;\nexport default AnimeList;\nvar _c;\n$RefreshReg$(_c, \"AnimeList\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","AnimeList","_s","animeData","setAnimeData","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","length","map","anime","index","title","_c","$RefreshReg$"],"sources":["C:/Users/dylam/Desktop/django react/anime_player/anime-player-frontend/src/components/SearchAnime.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nconst AnimeList = () => {\r\n  const [animeData, setAnimeData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch(\"http://localhost:8000/api/anime/\")\r\n      .then((response) => response.json())\r\n      .then((data) => setAnimeData(data))\r\n      .catch((error) => console.error(\"Error fetching data:\", error));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Anime List</h1>\r\n      {animeData.length === 0 ? (\r\n        <p>No anime data available</p>\r\n      ) : (\r\n        <ul>\r\n          {animeData.map((anime, index) => (\r\n            <li key={index}>{anime.title}</li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AnimeList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACdO,KAAK,CAAC,kCAAkC,CAAC,CACtCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAKL,YAAY,CAACK,IAAI,CAAC,CAAC,CAClCC,KAAK,CAAEC,KAAK,IAAKC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC,CAAC;EACnE,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEX,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAClBd,SAAS,CAACe,MAAM,KAAK,CAAC,gBACrBlB,OAAA;MAAAa,QAAA,EAAG;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAE9BjB,OAAA;MAAAa,QAAA,EACGV,SAAS,CAACgB,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC1BrB,OAAA;QAAAa,QAAA,EAAiBO,KAAK,CAACE;MAAK,GAAnBD,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAmB,CAClC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACf,EAAA,CAxBID,SAAS;AAAAsB,EAAA,GAATtB,SAAS;AA0Bf,eAAeA,SAAS;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}